function purge(e,o){if(people[e.id].inroom){var i=rooms[people[e.id].inroom];if(e.id===i.owner){if("disconnect"===o){io.sockets["in"](e.room).emit("update","The owner ("+people[e.id].name+") has left the server. The room is removed and you have been disconnected from it as well.");for(var s=[],t=0;t<sockets.length;t++)s.push(sockets[t].id),_.contains(s),i.people&&sockets[t].leave(i.name);if(_.contains(i.people),e.id)for(var t=0;t<i.people.length;t++)people[i.people[t]].inroom=null;i.people=_.without(i.people,e.id),delete rooms[people[e.id].owns],delete people[e.id],delete chatHistory[i.name],sizePeople=_.size(people),sizeRooms=_.size(rooms),io.sockets.emit("update-people",{people:people,count:sizePeople}),io.sockets.emit("roomList",{rooms:rooms,count:sizeRooms});var p=_.findWhere(sockets,{id:e.id});sockets=_.without(sockets,p)}else if("removeRoom"===o){io.sockets["in"](e.room).emit("update","The owner ("+people[e.id].name+") has removed the room. The room is removed and you have been disconnected from it as well.");for(var s=[],t=0;t<sockets.length;t++)s.push(sockets[t].id),_.contains(s),i.people&&sockets[t].leave(i.name);if(_.contains(i.people),e.id)for(var t=0;t<i.people.length;t++)people[i.people[t]].inroom=null;delete rooms[people[e.id].owns],people[e.id].owns=null,i.people=_.without(i.people,e.id),delete chatHistory[i.name],sizeRooms=_.size(rooms),io.sockets.emit("roomList",{rooms:rooms,count:sizeRooms})}else if("leaveRoom"===o){io.sockets["in"](e.room).emit("update","The owner ("+people[e.id].name+") has left the room. The room is removed and you have been disconnected from it as well.");for(var s=[],t=0;t<sockets.length;t++)s.push(sockets[t].id),_.contains(s),i.people&&sockets[t].leave(i.name);if(_.contains(i.people),e.id)for(var t=0;t<i.people.length;t++)people[i.people[t]].inroom=null;delete rooms[people[e.id].owns],people[e.id].owns=null,i.people=_.without(i.people,e.id),delete chatHistory[i.name],sizeRooms=_.size(rooms),io.sockets.emit("roomList",{rooms:rooms,count:sizeRooms})}}else if("disconnect"===o){if(io.sockets.emit("update",people[e.id].name+" has disconnected from the server."),_.contains(i.people,e.id)){var n=i.people.indexOf(e.id);i.people.splice(n,1),e.leave(i.name)}delete people[e.id],sizePeople=_.size(people),io.sockets.emit("update-people",{people:people,count:sizePeople});var p=_.findWhere(sockets,{id:e.id});sockets=_.without(sockets,p)}else if("removeRoom"===o)e.emit("update","Only the owner can remove a room.");else if("leaveRoom"===o&&_.contains(i.people,e.id)){var n=i.people.indexOf(e.id);i.people.splice(n,1),people[e.id].inroom=null,io.sockets.emit("update",people[e.id].name+" has left the room."),e.leave(i.name)}}else if("disconnect"===o){io.sockets.emit("update",people[e.id].name+" has disconnected from the server."),delete people[e.id],sizePeople=_.size(people),io.sockets.emit("update-people",{people:people,count:sizePeople});var p=_.findWhere(sockets,{id:e.id});sockets=_.without(sockets,p)}}var express=require("express"),app=express(),server=require("http").createServer(app),io=require("socket.io").listen(server),npid=require("npid"),uuid=require("node-uuid"),Room=require("./room.js"),_=require("underscore")._;app.configure(function(){app.set("port",process.env.OPENSHIFT_NODEJS_PORT||3e3),app.set("ipaddr",process.env.OPENSHIFT_NODEJS_IP||"127.0.0.1"),app.use(express.bodyParser()),app.use(express.methodOverride()),app.use(express["static"](__dirname+"/public")),app.use("/components",express["static"](__dirname+"/components")),app.use("/js",express["static"](__dirname+"/js")),app.use("/icons",express["static"](__dirname+"/icons")),app.set("views",__dirname+"/views"),app.engine("html",require("ejs").renderFile);try{npid.create("/var/run/1.pid",!0)}catch(e){console.log(e)}}),app.get("/",function(e,o){o.render("index.html")}),


	//Please Make sure that you update server.js:
	server.listen(app.get("port"),app.get("10.24.197.188"),
	function(){console.log("Express server listening on  IP: "+app.get("10.24.197.188")+" and port "+app.get("port"))



}),io.set("log level",1);

var people={},rooms={},sockets=[],chatHistory={};io.sockets.on("connection",function(e){e.on("joinserver",function(o,i){var s=!1,t=inRoomID=null;if(_.find(people,function(e){return e.name.toLowerCase()===o.toLowerCase()?s=!0:void 0}),s){var p=Math.floor(1001*Math.random());do proposedName=o+p,_.find(people,function(e){return e.name.toLowerCase()===proposedName.toLowerCase()?s=!0:void 0});while(!s);e.emit("exists",{msg:"The username already exists, please pick another one.",proposedName:proposedName})}else people[e.id]={name:o,owns:t,inroom:inRoomID,device:i},e.emit("update","You have connected to the server."),io.sockets.emit("update",people[e.id].name+" is online."),sizePeople=_.size(people),sizeRooms=_.size(rooms),io.sockets.emit("update-people",{people:people,count:sizePeople}),e.emit("roomList",{rooms:rooms,count:sizeRooms}),e.emit("joined"),sockets.push(e)}),e.on("getOnlinePeople",function(e){e({people:people})}),e.on("countryUpdate",function(o){country=o.country.toLowerCase(),people[e.id].country=country,io.sockets.emit("update-people",{people:people,count:sizePeople})}),e.on("typing",function(o){"undefined"!=typeof people[e.id]&&io.sockets["in"](e.room).emit("isTyping",{isTyping:o,person:people[e.id].name})}),e.on("send",function(o,i){var s=/^[w]:.*:/,t=s.test(i),p=i.split(":"),n=!1;if(t){var r=p[1],a=Object.keys(people);if(0!=a.length)for(var m=0;m<a.length;m++)if(people[a[m]].name===r){var l=a[m];n=!0,e.id===l&&e.emit("update","You can't whisper to yourself.");break}if(n&&e.id!==l){var r=p[1],d=p[2];e.emit("whisper",{name:"You"},d),io.sockets.socket(l).emit("whisper",o,people[e.id],d)}else e.emit("update","Can't find "+r)}else void 0!==io.sockets.manager.roomClients[e.id]["/"+e.room]?(io.sockets["in"](e.room).emit("chat",o,people[e.id],i),e.emit("isTyping",!1),_.size(chatHistory[e.room])>10?chatHistory[e.room].splice(0,1):chatHistory[e.room].push(people[e.id].name+": "+i)):e.emit("update","Please connect to a room.")}),e.on("disconnect",function(){"undefined"!=typeof people[e.id]&&purge(e,"disconnect")}),e.on("createRoom",function(o){if(people[e.id].inroom)e.emit("update","You are in a room. Please leave it first to create your own.");else if(people[e.id].owns)e.emit("update","You have already created a room.");else{var i=uuid.v4(),s=new Room(o,i,e.id);rooms[i]=s,sizeRooms=_.size(rooms),io.sockets.emit("roomList",{rooms:rooms,count:sizeRooms}),e.room=o,e.join(e.room),people[e.id].owns=i,people[e.id].inroom=i,s.addPerson(e.id),e.emit("update","Welcome to "+s.name+"."),e.emit("sendRoomID",{id:i}),chatHistory[e.room]=[]}}),e.on("check",function(e,o){var i=!1;_.find(rooms,function(o){return o.name===e?i=!0:void 0}),o({result:i})}),e.on("removeRoom",function(o){var i=rooms[o];e.id===i.owner?purge(e,"removeRoom"):e.emit("update","Only the owner can remove a room.")}),e.on("joinRoom",function(o){if("undefined"!=typeof people[e.id]){var i=rooms[o];if(e.id===i.owner)e.emit("update","You are the owner of this room and you have already been joined.");else if(_.contains(i.people,e.id))e.emit("update","You have already joined this room.");else if(null!==people[e.id].inroom)e.emit("update","You are already in a room ("+rooms[people[e.id].inroom].name+"), please leave it first to join another room.");else{i.addPerson(e.id),people[e.id].inroom=o,e.room=i.name,e.join(e.room),user=people[e.id],io.sockets["in"](e.room).emit("update",user.name+" has connected to "+i.name+" room."),e.emit("update","Welcome to "+i.name+"."),e.emit("sendRoomID",{id:o});var s=_.keys(chatHistory);_.contains(s,e.room)&&e.emit("history",chatHistory[e.room])}}else e.emit("update","Please enter a valid name first.")}),e.on("leaveRoom",function(o){var i=rooms[o];i&&purge(e,"leaveRoom")})});